/**
 * @author ghoti-cli
 * @overview generated by ghoti-cli
 * @fileoverview example
 */

import * as React from 'react';
import * as Component from './component/import';
import * as Func from './func/import';
import * as Lambda from './lambda/import';
import * as Page from './page/import';

import Config from './config/config';

/**
 * You should not edit this file for your example
 * Anyway, you can edit it for fun!
 * Please let me know if you have any issue or suggestion!
 */

export interface IState {
    step: number;
}

class Example extends React.Component<{}, IState> {
    public constructor(props) {
        super(props);
        let step = localStorage.getItem("step");
        this.state = {
            step: parseInt(step, 10) || 0,
        };
    }

    public render() {
        return (
            <div>
                <div>Hello, assume you have experienced with React</div>
                <div>Here are some quick start example for you to know how GHOTI structure working</div>
                <hr />
                {this.steps.bind(this)(this.state.step).map(this._mapSteps)}
                <div>After that, click <button onClick={this.nextStep.bind(this)}>this button</button><button onClick={this.priviousStep.bind(this)}>BACK</button></div>
                <hr />
            </div>
        );
    }

    protected nextStep() {
        localStorage.setItem("step", (this.state.step + 1).toString());
        this.setState({
            step: this.state.step + 1,
        });
    }

    protected priviousStep() {
        localStorage.setItem("step", (this.state.step - 1).toString());
        this.setState({
            step: this.state.step - 1,
        });
    }

    protected _mapSteps(value: string, index: number) {
        return <div key={index}>{value}</div>;
    }

    protected steps(step: number) {
        switch (step) {
            case 0:
                return [
                    'First, lets create a page of your side',
                    'Type "ghoti page example" in your terminal',
                ];
            case 1:
                return [
                    'You should have a page setted up',
                    'To make it part of your router, go to /src/hello.tsx',
                    'Change example route\'s component value from "null" to "Page.example"',
                    'Try it with change your browser link to "localhost:8080/example"',
                ];
            case 2:
                return [
                    'You can make some change for fun',
                    'GOAL: we are going to render a list and calculate complex math problem',
                ];
            case 3:
                return [
                    'First, lets create a page of your side',
                    'Type "ghoti page example" in your terminal',
                ];
        }
    }
}

export default Example;
